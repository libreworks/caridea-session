<?php
/**
 * Caridea
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 * @copyright 2015-2018 LibreWorks contributors
 * @license   Apache-2.0
 */
namespace Caridea\Session;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-30 at 12:35:45.
 */
class FlashPluginTest extends \PHPUnit\Framework\TestCase
{
    /**
     * @var FlashPlugin
     */
    protected $object;
    /**
     * @var Session
     */
    protected $session;

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new FlashPlugin();
        
        $session = $this->getMockBuilder(Session::class)
            ->setMethods(['getValues'])
            ->getMockForAbstractClass();
        $session->expects($this->any())
            ->method('start')
            ->willReturn(true);
        $session->expects($this->any())
            ->method('resume')
            ->willReturn(true);
        $session->expects($this->any())
            ->method('getValues')
            ->willReturnCallback(function ($namespace) use ($session) {
                return new Values($session, $namespace);
            });
        $this->session = $session;
    }

    /**
     * @covers Caridea\Session\FlashPlugin::__construct
     * @covers Caridea\Session\FlashPlugin::clear
     * @covers Caridea\Session\FlashPlugin::set
     * @covers Caridea\Session\FlashPlugin::getNext
     * @covers Caridea\Session\FlashPlugin::getCurrent
     */
    public function testClear()
    {
        $this->object->onStart($this->session);
        $this->object->set('aoeu', 'htns', true);
        $this->assertEquals('htns', $this->object->getNext('aoeu'));
        $this->assertEquals('htns', $this->object->getCurrent('aoeu'));
        $this->object->clear();
        $this->assertNull($this->object->getNext('aoeu'));
        $this->assertEquals('htns', $this->object->getCurrent('aoeu'));
        $this->object->clear(true);
        $this->assertNull($this->object->getNext('aoeu'));
        $this->assertNull($this->object->getNext('aoeu'));
    }

    /**
     * @covers Caridea\Session\FlashPlugin::getAllCurrent
     */
    public function testGetAllCurrent()
    {
        $this->assertInstanceOf('Iterator', $this->object->getAllCurrent());
    }

    /**
     * @covers Caridea\Session\FlashPlugin::getAllNext
     */
    public function testGetAllNext()
    {
        $this->assertInstanceOf('Iterator', $this->object->getAllNext());
    }

    /**
     * @covers Caridea\Session\FlashPlugin::keep
     */
    public function testKeep()
    {
        $_SESSION[FlashPlugin::class . '\\CURR'] = ['abc' => '123'];
        $_SESSION[FlashPlugin::class . '\\NEXT'] = ['def' => '456'];
        $this->object->onStart($this->session);
        $this->object->set('foo', 'bar', true);
        $this->object->keep();
        $this->assertEquals('456', $this->object->getNext('def'));
    }

    /**
     * @covers Caridea\Session\FlashPlugin::set
     * @covers Caridea\Session\FlashPlugin::getNext
     * @covers Caridea\Session\FlashPlugin::getCurrent
     */
    public function testSet()
    {
        $this->object->onStart($this->session);
        $this->object->set('foobar', 'testing');
        $this->assertEquals('testing', $this->object->getNext('foobar'));
        $this->assertNull($this->object->getCurrent('foobar'));
        $this->object->set('aoeu', 'htns', true);
        $this->assertEquals('htns', $this->object->getNext('aoeu'));
        $this->assertEquals('htns', $this->object->getCurrent('aoeu'));
    }

    /**
     * @covers Caridea\Session\FlashPlugin::onStart
     * @covers Caridea\Session\FlashPlugin::cycle
     */
    public function testCycle()
    {
        $_SESSION[FlashPlugin::class . '\\CURR'] = ['abc' => '123'];
        $_SESSION[FlashPlugin::class . '\\NEXT'] = ['def' => '456'];
        
        $this->object->onStart($this->session);
        $this->assertEquals(['def' => '456'], $_SESSION[FlashPlugin::class . '\\CURR']);
        $this->assertEmpty($_SESSION[FlashPlugin::class . '\\NEXT']);
        $this->object->onStart($this->session);
        $this->assertEquals(['def' => '456'], $_SESSION[FlashPlugin::class . '\\CURR']);
        $this->assertEmpty($_SESSION[FlashPlugin::class . '\\NEXT']);
    }
}
